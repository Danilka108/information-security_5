using System;using System.IO;using ReactiveUI;namespace InformationSecurity.ViewModels{    public class MainWindowViewModel : ViewModelBase    {        private string _key;        private string _message;        private string _pathToFile;        private int _selectedIndexComboBox;        public string Key        {            get => _key;            set => this.RaiseAndSetIfChanged(ref _key, value);        }                public string Message        {            get => _message;            set => this.RaiseAndSetIfChanged(ref _message, value);        }                public string PathToFile        {            get => _pathToFile;            set => this.RaiseAndSetIfChanged(ref _pathToFile, value);        }                public int SelectedIndexComboBox        {            get => _selectedIndexComboBox;            set => this.RaiseAndSetIfChanged(ref _selectedIndexComboBox, value);        }                public MainWindowViewModel()        {                    }        public void ReadFromFile()        {            try            {                if (_selectedIndexComboBox == 0) Key = File.ReadAllText(_pathToFile);                if (_selectedIndexComboBox == 1) Message = File.ReadAllText(_pathToFile);            }            catch (Exception)            {                var message = MessageBox.Avalonia.MessageBoxManager                    .GetMessageBoxStandardWindow("Ошибка", "Ошибка открытия файла");                message.Show();            }        }        public void EncryptOrDecrypt()        {                    }    }}